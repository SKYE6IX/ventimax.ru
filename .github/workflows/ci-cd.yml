name: Create docker image
on:
   push:
      branches:
         - main
jobs:
   build:
      runs-on: ubuntu-latest
      env:
         NEXT_PUBLIC_ROCKET_CHAT_URL: ${{ vars.ROCKET_CHAT_URL }}
         NEXT_PUBLIC_SERVICE_ID: ${{ secrets.SERVICE_ID }}
         NEXT_PUBLIC_TEMPLATE_ID: ${{ secrets.TEMPLATE_ID}}
         NEXT_PUBLIC_PUBLIC_KEY: ${{ vars.PUBLIC_KEY }}
      steps:
         - name: Login to Docker Hub
           uses: docker/login-action@v3
           with:
              username: ${{ vars.DOCKER_USERNAME }}
              password: ${{ secrets.DOCKERHUB_TOKEN }}

         - name: Checkout code
           uses: actions/checkout@v4
           with:
              fetch-depth: 0

         - name: Set up QEMU
           uses: docker/setup-qemu-action@v3

         - name: Set up Docker Buildx
           uses: docker/setup-buildx-action@v3

         - name: Build and push
           uses: docker/build-push-action@v6
           with:
              push: true
              file: Dockerfile
              tags: ${{ vars.DOCKER_USERNAME }}/${{ github.event.repository.name }}:latest
              build-args: |
                 NEXT_PUBLIC_ROCKET_CHAT_URL=${{ env.NEXT_PUBLIC_ROCKET_CHAT_URL }}
                 NEXT_PUBLIC_SERVICE_ID=${{ env.NEXT_PUBLIC_SERVICE_ID }}
                 NEXT_PUBLIC_TEMPLATE_ID=${{ env.NEXT_PUBLIC_TEMPLATE_ID }}
                 NEXT_PUBLIC_PUBLIC_KEY=${{ env.NEXT_PUBLIC_PUBLIC_KEY }}

   deploy:
      runs-on: ubuntu-latest
      needs: build
      steps:
         - name: Login to Yandex Cloud Container Registry
           uses: yc-actions/yc-cr-login@v3
           with:
              yc-sa-json-credentials: ${{ secrets.YC_SA_CI_CD_KEY_JSON }}

         - name: Pull from Docker Hub and Push to Yandex CR
           env:
              CR_REGISTRY_ID: ${{ vars.YC_REGISTRY_ID }}
              IMAGE_NAME: ${{ github.event.repository.name }}
              IMAGE_TAG: latest
           run: |
              docker pull ${{ vars.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

              docker tag ${{ vars.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} \
              cr.yandex/${{ env.CR_REGISTRY_ID }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

              docker push cr.yandex/${{ env.CR_REGISTRY_ID }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

         - name: Deploy to Serverless Container
           uses: yc-actions/yc-sls-container-deploy@v3
           with:
              yc-sa-json-credentials: ${{ secrets.YC_SA_CI_CD_KEY_JSON  }}
              container-name: ${{ vars.YC_CONTAINER_NAME }}
              folder-id: ${{ vars.YC_FOLDER_ID }}
              revision-service-account-id: ${{ secrets.YC_SA_ID }}
              revision-cores: 1
              revision-memory: 512Mb
              revision-core-fraction: 100
              revision-image-url: cr.yandex/${{ vars.YC_REGISTRY_ID }}/${{ github.event.repository.name }}:latest
              revision-execution-timeout: 10
